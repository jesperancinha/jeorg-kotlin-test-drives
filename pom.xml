<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jesperancinha.ktd</groupId>
    <artifactId>jeorg-kotlin-test-drives</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.fbuild.sourceEncoding>UTF-8</project.fbuild.sourceEncoding>
        <kotlin.code.style>official</kotlin.code.style>
        <exec-maven-plugin.version>3.5.1</exec-maven-plugin.version>

        <!-- Build -->
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.5.4</maven-failsafe-plugin.version>
        <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>3.6.1</maven-shade-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>

        <build-helper-maven-plugin.version>3.6.1</build-helper-maven-plugin.version>
        <kotlin.version>2.2.20</kotlin.version>

        <!-- External libraries -->
        <kotlinx.coroutines.version>1.10.2</kotlinx.coroutines.version>
        <truth.version>1.4.5</truth.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j-api.version>2.0.17</slf4j-api.version>
        <slf4j-simple.version>2.0.17</slf4j-simple.version>
        <log4j2.version>2.25.1</log4j2.version>
        <log4j-slf4j-impl.version>2.25.2</log4j-slf4j-impl.version>
        <jaxb-maven-plugin.version>3.0.0</jaxb-maven-plugin.version>
        <log4j-to-slf4j.version>2.25.2</log4j-to-slf4j.version>
        <jakarta.activation-api.version>2.1.4</jakarta.activation-api.version>
        <jakarta.xml.bind-api.version>4.0.4</jakarta.xml.bind-api.version>
        <mockito-all.version>1.10.19</mockito-all.version>
        <mockk-jvm.version>1.14.5</mockk-jvm.version>
        <picocli.version>4.7.7</picocli.version>

        <!-- Loggers -->
        <consolerizer.version>2.2.3</consolerizer.version>

        <!-- Unit testing -->
        <mockk.version>1.14.5</mockk.version>

        <!-- Coverage related -->
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
        <omni-coveragereporter-maven-plugin.version>0.4.5</omni-coveragereporter-maven-plugin.version>
        <jakarta.validation-api.version>3.1.1</jakarta.validation-api.version>
        <jackson.version>2.15.0</jackson.version>
        <jackson-databind.version>2.20.0</jackson-databind.version>
        <jackson-module-kotlin.version>2.20.0</jackson-module-kotlin.version>
        <jackson-dataformat-xml.version>2.20.0</jackson-dataformat-xml.version>
        <jackson-core.version>2.20.0</jackson-core.version>
        <jackson-annotations.version>2.20</jackson-annotations.version>

        <!-- Project Arrow Libraries -->
        <arrow.version>2.1.2</arrow.version>
        <arrow-optics-ksp-plugin.version>1.1.5</arrow-optics-ksp-plugin.version>
        <kotlin-maven-symbol-processing.version>1.5</kotlin-maven-symbol-processing.version>
        <arrow-analysis-types-jvm.version>2.0.3-alpha.2</arrow-analysis-types-jvm.version>
        <spring-boot-starter-parent.version>3.5.6</spring-boot-starter-parent.version>
        <springmockk.version>4.0.2</springmockk.version>
        <log4j.version>1.2.17</log4j.version>
        <kotlinx-coroutines-reactor.version>1.10.2</kotlinx-coroutines-reactor.version>
        <kotlin-reflect.version>2.2.20</kotlin-reflect.version>
        <hibernate-validator.version>8.0.3.Final</hibernate-validator.version>
        <commons-logging.version>1.3.5</commons-logging.version>
        <lombok.version>1.18.42</lombok.version>
        <jakarta.el.version>5.0.0-M1</jakarta.el.version>
        <ktor.version>2.3.13</ktor.version>
        <xercesImpl.version>2.11.0.1</xercesImpl.version>
        <json-simple.version>1.1.1</json-simple.version>
        <junit-bom.version>5.13.4</junit-bom.version>
        <vertx-stack-depchain.version>5.0.4</vertx-stack-depchain.version>
        <netty-bom.version>4.2.6.Final</netty-bom.version>
        <koin-bom.version>4.1.1</koin-bom.version>
        <koin-annotations-jvm.version>2.1.0</koin-annotations-jvm.version>
        <ksp-maven-plugin.version>1.9.10-1.0.13</ksp-maven-plugin.version>
        <kotest-bom.version>6.0.3</kotest-bom.version>
        <args4j-maven-plugin.version>2.37</args4j-maven-plugin.version>
        <thumbnailator.version>0.4.20</thumbnailator.version>
    </properties>

    <modules>
        <module>jeorg-kotlin-crums</module>
        <module>jeorg-kotlin-utilities</module>
        <module>jeorg-kotlin-masters</module>
        <module>jeorg-kotlin-apps</module>
        <module>jeorg-kotlin-coroutines</module>
        <module>jeorg-kotlin-coroutines/coroutines-cancellation-examples</module>
        <module>jeorg-kotlin-coroutines/coroutines-swing</module>
    </modules>

    <packaging>pom</packaging>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-stack-depchain</artifactId>
                <version>${vertx-stack-depchain.version}</version> <!-- Match your Vert.x version -->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.insert-koin</groupId>
                <artifactId>koin-bom</artifactId>
                <version>${koin-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.kohsuke.args4j</groupId>
                <artifactId>args4j-maven-plugin</artifactId>
                <version>${args4j-maven-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>
            <dependency>
                <groupId>io.insert-koin</groupId>
                <artifactId>koin-annotations-jvm</artifactId>
                <version>${koin-annotations-jvm.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.validation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin-reflect.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-analysis-types-jvm</artifactId>
                <version>${arrow-analysis-types-jvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jesperancinha.console</groupId>
                <artifactId>consolerizer</artifactId>
                <version>${consolerizer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core-jvm</artifactId>
                <version>${kotlinx.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core</artifactId>
                <version>${kotlinx.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-swing</artifactId>
                <version>${kotlinx.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-jdk8</artifactId>
                <version>${kotlinx.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-test</artifactId>
                <version>${kotlinx.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${jackson-module-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson-dataformat-xml.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-core-jvm</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-optics-jvm</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-optics</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-bom</artifactId>
                <version>${kotest-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-reactor</artifactId>
                <version>${kotlinx-coroutines-reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-core-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-auth-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-auth-jwt-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-content-negotiation-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-jackson-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-netty-jvm</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk</artifactId>
                <version>${mockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ninja-squad</groupId>
                <artifactId>springmockk</artifactId>
                <version>${springmockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-tests-jvm</artifactId>
                <version>${ktor.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>de.julielab</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>${xercesImpl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${json-simple.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jesperancinha.plugins</groupId>
                    <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                    <version>${omni-coveragereporter-maven-plugin.version}</version>
                    <configuration>
                        <httpRequestParallelization>3</httpRequestParallelization>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/main/kotlin</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>